version: "3.9"
services:
  backend:
    build:
      context: ./back
      dockerfile: dockerfile
      args:
        - BACK_BASE_IMAGE=${BACK_BASE_IMAGE}
        - BACK_BASE_TAG=${BACK_BASE_TAG}
    image: ${BACK_IMAGE}:${BACK_TAG}
    container_name: ${BACK_CONTAINER_NAME}
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MUD_PEPPER=${MUD_PEPPER}
      - ANAL_HOST=${ANAL_HOST}
      - ANAL_PORT=${ANAL_PORT}
    networks:
      - mud
    volumes:
      - ${BACK_LOG}:/mnt/logs:rw
    deploy:
      resources:
        limits:
          cpus: ${BACK_CPU_LIMIT}
          memory: ${BACK_MEM_LIMIT}
        reservations:
          cpus: ${BACK_CPU_RESERV}
          memory: ${BACK_MEM_RESERV}
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 30s

  frontend:
    build:
      context: ./front
      dockerfile: dockerfile
      args:
        - FRONT_BASE_IMAGE=${FRONT_BASE_IMAGE}
        - FRONT_BASE_TAG=${FRONT_BASE_TAG}
    image: ${FRONT_IMAGE}:${FRONT_TAG}
    container_name: ${FRONT_CONTAINER_NAME}
    environment:
      - PORT=${FRONT_PORT}
      - API_DOMAIN=${API_DOMAIN}
      - API_PORT=${API_PORT}
    networks:
      - mud
    volumes:
      - ${LOG_VOLUME_FRONT}:/mnt/logs:rw
    deploy:
      resources:
        limits:
          cpus: ${FRONT_CPU_LIMIT}
          memory: ${FRONT_MEM_LIMIT}
        reservations:
          cpus: ${FRONT_CPU_RESERV}
          memory: ${FRONT_MEM_RESERV}
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 30s

networks:
  mud:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.1.0/24
